{"version":3,"sources":["pages/layout/logo.png","hooks/http.hook.js","context/AuthContext.js","pages/layout/Loader.js","pages/layout/LinksList.js","pages/LinksPage.js","pages/CreatePage.js","pages/layout/LinkCard.js","pages/DetailPage.js","pages/AuthPage.js","hooks/message.hook.js","pages/layout/HeaderComponent.js","App.js","hooks/auth.hook.js","routes.js","serviceWorker.js","index.js"],"names":["module","exports","useHttp","useState","loading","setLoading","error","setError","request","useCallback","url","a","method","body","headers","JSON","stringify","fetch","res","json","data","ok","Error","message","clearError","noop","AuthContext","createContext","token","userId","login","logout","isAuthenticated","Loader","className","LinksList","links","length","scope","map","link","index","key","_id","from","to","target","LinksPage","useContext","setLinks","getLinks","Authorization","fetched","useEffect","CreatePage","history","useHistory","auth","setLink","pressHandler","event","push","console","log","id","type","autoComplete","value","onChange","e","onKeyPress","LinkCard","href","rel","clicks","Date","date","toLocaleDateString","DetailPage","linkId","useParams","getLink","AuthPage","text","window","M","toast","html","email","password","form","setForm","changeHandler","name","registHandler","loginHandler","style","minWidth","src","logo","width","height","alt","htmlFor","onClick","color","disabled","HeaderComponent","data-toggle","data-target","aria-controls","aria-expanded","aria-label","preventDefault","App","setToken","ready","setReady","setUserId","jwtToken","localStorage","setItem","removeItem","parse","getItem","useAuth","routes","path","exact","useRoutes","Provider","marginTop","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.867337ec.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.de068c45.png\";","import {useState, useCallback} from \"react\";\r\n\r\n\r\n\r\nexport const useHttp = ()=>{\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n    const request = useCallback (async (url, method = 'GET', body = null, headers={})=>{\r\n        setLoading(true);\r\n        if(body){\r\n            body = JSON.stringify(body);\r\n            headers['Content-Type'] = 'application/json';\r\n        }\r\n        try{\r\n            const res = await fetch(url, {method, body, headers});\r\n            const data = await res.json();\r\n\r\n            if(!res.ok){\r\n                throw new Error(data.message || \"Some error\");\r\n            }\r\n            setLoading(false);\r\n\r\n            return data;\r\n        }catch(e){\r\n            setLoading(false);\r\n            setError(e.message);\r\n            throw e;\r\n        }\r\n    }, []);\r\n\r\n    const clearError = useCallback(()=> setError(null), []);\r\n    return{loading, request, error, clearError};\r\n};","import {createContext} from 'react';\r\n\r\nfunction noop(){}\r\n\r\nexport const AuthContext = createContext({\r\n    token: null,\r\n    userId: null,\r\n    login: noop,\r\n    logout: noop,\r\n    isAuthenticated: false\r\n});","import React from 'react';\r\n\r\nexport const Loader = () =>{\r\n    return(\r\n        <div className=\"preloader-wrapper big active mx-auto my-auto\">\r\n            <div className=\"spinner-layer spinner-blue-only\">\r\n                <div className=\"circle-clipper left\">\r\n                    <div className=\"circle\"></div>\r\n                </div>\r\n                <div className=\"gap-patch\">\r\n                    <div className=\"circle\"></div>\r\n                </div>\r\n                <div className=\"circle-clipper right\">\r\n                    <div className=\"circle\"></div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nexport const LinksList = ({links}) =>{\r\n    if(!links.length){\r\n        return <p className='mx-auto my-auto'>You haven't yet links</p>;\r\n    }\r\n\r\n    return(\r\n        <div className=\"w-100\">\r\n            <table className=\"table w-100\">\r\n                <thead className=\"thead-dark\">\r\n                <tr>\r\n                    <th scope=\"col\">№</th>\r\n                    <th scope=\"col\">From</th>\r\n                    <th scope=\"col\">To</th>\r\n                    <th scope=\"col\">Open</th>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                {links.map((link, index)=>{\r\n                    return(\r\n                        <tr key={link._id}>\r\n                            <th scope=\"row\">{index+1}</th>\r\n                            <td>{link.from}</td>\r\n                            <td>{link.to}</td>\r\n                            <td><Link to={`/detail/${link._id}`} target='_blank'>Detail</Link></td>\r\n                        </tr>\r\n                    );\r\n                }) }\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n\r\n    );\r\n};","import React, {useCallback, useContext, useEffect, useState} from 'react';\r\nimport {useHttp} from \"../hooks/http.hook\";\r\nimport {AuthContext} from \"../context/AuthContext\";\r\nimport {Loader} from \"./layout/Loader\";\r\nimport {LinksList} from \"./layout/LinksList\";\r\n\r\nexport const LinksPage = () => {\r\n    const {request, loading} = useHttp();\r\n    const {token} = useContext(AuthContext);\r\n    const [links, setLinks] = useState([]);\r\n\r\n    const getLinks = useCallback( async ()=>{\r\n        try{\r\n            const fetched = await request(`/api/links`, 'GET', null, {Authorization: `Bearer ${token}`});\r\n            setLinks(fetched);\r\n        }catch(e){}\r\n    }, [token, request]);\r\n\r\n    useEffect(()=>{\r\n        getLinks();\r\n    }, [getLinks]);\r\n\r\n    if(loading){\r\n        return <Loader/>\r\n    }\r\n    return (\r\n        <>\r\n            {!loading && <LinksList links={links}/>}\r\n        </>\r\n    );\r\n}","import React, {useContext, useState} from 'react';\r\nimport {useHistory} from 'react-router-dom';\r\nimport {useHttp} from \"../hooks/http.hook\";\r\nimport {AuthContext} from \"../context/AuthContext\";\r\n\r\nexport const CreatePage = () => {\r\n    const history = useHistory();\r\n    const auth = useContext(AuthContext);\r\n    const {request} = useHttp();\r\n    const [link, setLink] = useState(\"\");\r\n\r\n    const pressHandler = async (event)=>{\r\n        if(event.key === \"Enter\"){\r\n            try{\r\n                const data = await request('/api/links/generate', \"POST\", {from: link}, {\r\n                    Authorization: `Bearer ${auth.token}`\r\n                });\r\n                history.push(`/detail/${data.link._id}`)\r\n            }catch (e) {\r\n                console.log(\"Error(event Enter)\",e.message);\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"row w-100 text-center\">\r\n            <div className=\"col\">\r\n                <div className=\"input-group mb-3\">\r\n                    <div className=\"input-group-prepend\">\r\n                        <span className=\"input-group-text\" id=\"basic-addon1\">Paste link here <span  className=\"material-icons\"> keyboard_arrow_right</span></span>\r\n                    </div>\r\n                    <input\r\n                        type=\"text\"\r\n                        autoComplete=\"url\"\r\n                        className=\"form-control\"\r\n                        id=\"link\"\r\n                        value={link}\r\n                        onChange={e => setLink(e.target.value)}\r\n                        onKeyPress={pressHandler}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React from \"react\";\r\n\r\nexport const LinkCard = ({link}) =>{\r\n    return(\r\n        <div>\r\n            <h2>Link</h2>\r\n            <p>Short link: <a href={link.to} target=\"_blank\" rel=\"noopener noreferrer\">{link.to}</a></p>\r\n            <p>Full link: <a href={link.from} target=\"_blank\" rel=\"noopener noreferrer\">{link.from}</a></p>\r\n            <p>Count of click: <strong>{link.clicks}</strong></p>\r\n            <p>Date of create: <strong>{new Date(link.date).toLocaleDateString()}</strong></p>\r\n        </div>\r\n    );\r\n};","import React, {useCallback, useContext, useEffect, useState} from 'react';\r\nimport {useParams} from 'react-router-dom';\r\nimport {useHttp} from \"../hooks/http.hook\";\r\nimport {AuthContext} from \"../context/AuthContext\";\r\nimport {Loader} from \"./layout/Loader\";\r\nimport {LinkCard} from \"./layout/LinkCard\";\r\n\r\nexport const DetailPage = () => {\r\n    const {request, loading} = useHttp();\r\n    const {token} = useContext(AuthContext);\r\n    const [link, setLink] = useState(null);\r\n    const linkId = useParams().id;\r\n\r\n    const getLink = useCallback( async ()=>{\r\n        try{\r\n           const fetched = await request(`/api/links/${linkId}`, 'GET', null, {Authorization: `Bearer ${token}`});\r\n           setLink(fetched);\r\n        }catch(e){}\r\n    }, [token, linkId, request]);\r\n\r\n    useEffect(()=>{\r\n        getLink();\r\n    }, [getLink]);\r\n\r\n    if(loading){\r\n        return <Loader/>\r\n    }\r\n    return (\r\n        <>\r\n            {!loading && link && <LinkCard link={link}/>}\r\n        </>\r\n    );\r\n}","import React, {useContext, useEffect, useState} from 'react';\r\nimport {useHttp} from \"../hooks/http.hook\";\r\nimport {useMessage} from \"../hooks/message.hook\";\r\nimport {AuthContext} from \"../context/AuthContext\";\r\nimport logo from \"./layout/logo.png\";\r\n\r\nexport const AuthPage = () => {\r\n    const auth = useContext(AuthContext);\r\n    const message = useMessage();\r\n    const {loading, error, request, clearError} = useHttp();\r\n    const [form, setForm] = useState({\r\n        email: \"\",\r\n        password: \"\"\r\n    });\r\n\r\n    useEffect(()=>{\r\n        message(error);\r\n        clearError();\r\n    }, [error, message, clearError]);\r\n\r\n    const changeHandler = (e)=>{\r\n        setForm({...form, [e.target.name]: e.target.value});\r\n    };\r\n\r\n    const registHandler = async ()=>{\r\n        try{\r\n            const data = await request(\"/api/auth/registration\", \"POST\", {...form});\r\n            message(data.message);\r\n        }catch(e){}\r\n    };\r\n\r\n    const loginHandler = async ()=>{\r\n        try{\r\n            const data = await request(\"/api/auth/login\", \"POST\", {...form});\r\n            message(data.message);\r\n            auth.login(data.token, data.userId);\r\n        }catch(e){}\r\n    };\r\n\r\n    return (\r\n        <div className=\"row my-auto mx-auto\" style={{minWidth: '50%'}}>\r\n            <div className=\"col w-100\">\r\n                <img src={logo} width=\"100\" height=\"50\"\r\n                     className=\"img-fluid authLogo\" alt=\"\"/>\r\n                <div className=\"card mt-5 bg-light\">\r\n                    <div className=\"card-body\">\r\n                        <h3 className=\"card-title text-center\">Authorization</h3>\r\n                        <form className='mt-5'>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"email\">Email address</label>\r\n                                <input\r\n                                    type=\"email\"\r\n                                    autoComplete=\"email\"\r\n                                    className=\"form-control\"\r\n                                    id=\"email\"\r\n                                    name=\"email\"\r\n                                    value={form.email}\r\n                                    onChange={changeHandler}\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"password\">Password</label>\r\n                                <input\r\n                                    type=\"password\"\r\n                                    autoComplete=\"current-password\"\r\n                                    className=\"form-control\"\r\n                                    id=\"password\"\r\n                                    name=\"password\"\r\n                                    value={form.password}\r\n                                    onChange={changeHandler}\r\n                                />\r\n                            </div>\r\n                            {/*<button type=\"submit\" className=\"btn btn-primary\">Submit</button>*/}\r\n                        </form>\r\n                        <hr/>\r\n                        <div className='d-flex justify-content-around'>\r\n                            <button\r\n                                className=\"nav-link btn btn-outline-info\"\r\n                                onClick={loginHandler}\r\n                                style={{color: 'black'}}\r\n                                disabled={loading}>Sign in</button>\r\n                            <button\r\n                                className=\"nav-link btn btn-outline-info\"\r\n                                onClick={registHandler}\r\n                                style={{color: 'black'}}\r\n                                disabled={loading}>Sign up</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import {useCallback} from 'react';\r\nimport 'materialize-css'\r\n\r\nexport const useMessage = () =>{\r\n    return useCallback((text)=>{\r\n        if(window.M && text){\r\n            window.M.toast({html: text});\r\n        }\r\n    }, []);\r\n};","import React, {useContext} from 'react';\r\nimport {NavLink, useHistory} from \"react-router-dom\";\r\nimport {AuthContext} from \"../../context/AuthContext\";\r\nimport logo from \"./logo.png\";\r\n\r\nexport const HeaderComponent = ()=>{\r\n    const history = useHistory();\r\n    const auth = useContext(AuthContext);\r\n\r\n    const logoutHandler = (e) =>{\r\n        e.preventDefault();\r\n        auth.logout();\r\n        history.push('/');\r\n    };\r\n\r\n    return(\r\n      <nav className=\"navbar navbar-expand-sm navbar-light bg-light border-bottom fixed fixed-top\">\r\n          <a className=\"navbar-brand\" href=\"/\">\r\n              <img src={logo} width=\"100\" height=\"30\"\r\n                   className=\"d-inline-block align-top img-fluid\" alt=\"\"/>\r\n          </a>\r\n          <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\"\r\n                  aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n              <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n              <ul className=\"navbar-nav ml-auto h-100\">\r\n                  <li className=\"nav-item mx-3 h-100\">\r\n                      <NavLink to=\"/create\" className='nav-link'>Create</NavLink>\r\n                  </li>\r\n                  <li className=\"nav-item mx-3\">\r\n                      <NavLink to=\"/links\" className='nav-link'>Links</NavLink>\r\n                  </li>\r\n                  <li className=\"nav-item mx-3\">\r\n                      <a href=\"/\" className='nav-link btn btn-outline-info' onClick={logoutHandler}>Logout</a>\r\n                  </li>\r\n              </ul>\r\n          </div>\r\n      </nav>\r\n  );\r\n};","import React from 'react';\nimport {useRoutes} from \"./routes\";\nimport {BrowserRouter} from 'react-router-dom';\nimport {useAuth} from \"./hooks/auth.hook\";\nimport {AuthContext} from \"./context/AuthContext\";\nimport {HeaderComponent} from \"./pages/layout/HeaderComponent\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n//import Popper from 'popper.js';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport {Loader} from \"./pages/layout/Loader\";\n\nfunction App() {\n    const {token, login, logout, userId, ready} = useAuth();\n    const isAuthenticated = !!token;\n    const routes = useRoutes(isAuthenticated);\n\n    if(!ready){\n        return <Loader/>\n    }\n\n    return (\n        <AuthContext.Provider value={{token, login, logout, userId, isAuthenticated}}>\n            <BrowserRouter>\n                {isAuthenticated && <HeaderComponent/>}\n                <div className='container-fluid d-flex vh-100' style={{marginTop: '5rem'}}>\n                    {routes}\n                </div>\n            </BrowserRouter>\n        </AuthContext.Provider>\n    );\n}\n\nexport default App;\n","import {useState, useCallback, useEffect} from 'react';\r\n\r\nconst storageName = 'userData'\r\n\r\nexport const useAuth = ()=>{\r\n    const [token, setToken] = useState(null);\r\n    const [ready, setReady] = useState(false);\r\n    const [userId, setUserId] = useState(null);\r\n\r\n    const login = useCallback((jwtToken, id)=>{\r\n        setToken(jwtToken);\r\n        setUserId(id);\r\n\r\n        localStorage.setItem(storageName, JSON.stringify({userId: id, token: jwtToken}));\r\n    },[]);\r\n\r\n    const logout = useCallback(()=>{\r\n        setToken(null);\r\n        setUserId(null);\r\n\r\n        localStorage.removeItem(storageName);\r\n    },[]);\r\n\r\n    useEffect(()=>{\r\n        const data = JSON.parse(localStorage.getItem(storageName));\r\n\r\n        if(data && data.token){\r\n            login(data.token, data.userId);\r\n        }\r\n        setReady(true);\r\n    }, [login]);\r\n\r\n    return {login, logout, token, userId, ready};\r\n};","import React from 'react';\r\nimport {LinksPage} from \"./pages/LinksPage\";\r\nimport {Switch, Route, Redirect} from \"react-router-dom\";\r\nimport {CreatePage} from \"./pages/CreatePage\";\r\nimport {DetailPage} from \"./pages/DetailPage\";\r\nimport {AuthPage} from \"./pages/AuthPage\";\r\n\r\nexport const useRoutes = isAuthenticated =>{\r\n    if(isAuthenticated){\r\n        return(\r\n            <Switch>\r\n                <Route path=\"/links\"  exact>\r\n                    <LinksPage/>\r\n                </Route>\r\n                <Route path=\"/create\"  exact>\r\n                    <CreatePage/>\r\n                </Route>\r\n                <Route path=\"/detail/:id\">\r\n                    <DetailPage/>\r\n                </Route>\r\n                <Redirect to=\"/create\"/>\r\n            </Switch>\r\n        );\r\n    }\r\n\r\n    return(\r\n        <Switch>\r\n            <Route path=\"/\"  exact>\r\n                <AuthPage/>\r\n            </Route>\r\n            <Redirect to=\"/\"/>\r\n        </Switch>\r\n    );\r\n};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}